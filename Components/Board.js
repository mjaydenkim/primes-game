import React, { Component } from 'react';
import {View,Text,StyleSheet, Button} from 'react-native';
import Tile from "./Tile.js";
export default class Board extends Component {
  constructor(props){
    super(props);
    this.state={ 
      board: [
        [9001, 10, false, false],
        [7, 10, false, false],
        [1337, 10, false, false],
        [false, 10, 5, 420]
      ]
    };
  this.createStartingBoard = this.createStartingBoard.bind(this);
  };

  createStartingBoard() {
    console.log('creating starting board')
    // returns one prime number
    // let prime = generatePrimeNumber();
    function createRow(){
      let row = [];
      for (let i = 0; i < 4; i++) {
        row.push(generatePrimeNumber());
      };
      return (row);
    }

    let firstRow = createRow();
    let secondRow = createRow();
    let thirdRow = createRow();
    let fourthRow = createRow();

    let newboard = [
      firstRow,
      secondRow,
      thirdRow,
      fourthRow
    ];
    console.log(this.state.board)
    console.log(newboard)

    this.setState({
      board: newboard
    }, function(state, props) {
      console.log(state);
      console.log(props);
    });
    console.log('finished')
  }
  
  swipeUp(){
    console.log("now 'swiping' up");
    // make some calculations about new tile numbers

  }
  swipeDown() {
    console.log("now 'swiping' down");
    // make more calculations about new tile numbers
    // this.setState({
    //   board: newCalculatedArrangement
    // });
  }

  render() {
    return (
      <View>
        {
          /* max value of rowIndex  will be 3 (for each row*/
          this.state.board.map( (row, rowIndex) => {
            return (
              <View key={rowIndex} style={styles.boardRow}>
                {
                  /* max value of colIndex will be 3 for each cell in each row */
                  row.map( 
                    (value, colIndex) => {
                      return <Tile key={colIndex} exists={value} number={value}/>
                    }
                  )
                }
              </View>
            );
          }) 
        }
        <Button onPress={this.swipeDown} title="Swipe Down"/>
        <Button onPress={this.createStartingBoard} title="Swipe Up" />
        <Button onPress={() => {}} title="Swipe Left" />
        <Button onPress={() => {}} title="Swipe Right" />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  boardRow:{
    flexDirection: "row"
  }
});

//returns a single prime from the array generated by displayPrimes (look down)
function generatePrimeNumber() {
  // generate array of 'primes' (1,2,3)
  let arrayOfPrimes = displayPrime(5);
  // pick a random 'prime' from arrayOfPrimes
  let newPrimeNumber = arrayOfPrimes[Math.floor(Math.random() * arrayOfPrimes.length)];
  // update the number displayed on the tile to the random 'prime'
  // pick random number from array
  // var item = items[Math.floor(Math.random()*items.length)];
  return newPrimeNumber;
}

const isPrime = (num) => {
  for (var i = 2; i < num; i++) {
    if (num % i === 0) {
      return false;
    }
  }
  return true;
};

const displayPrime = (n) => {
  var arr = [1, 2];
  for (var i = 3; i < n; i += 2) {
    if (isPrime(i)) {
      arr.push(i);
    }
  }
  return (arr); // use arr result on your own
};